# Generated by Django 5.1.4 on 2025-03-06 11:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('SubSync', '0010_reminder_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='reminder',
            name='notification_method',
            field=models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('in-app', 'In-App'), ('all', 'All')], default='email', help_text='Method of notification (email, SMS, etc.)', max_length=20),
        ),
        migrations.AlterField(
            model_name='reminder',
            name='reminder_date',
            field=models.DateField(blank=True, help_text='Next reminder date.', null=True),
        ),
        migrations.AlterField(
            model_name='reminder',
            name='reminder_type',
            field=models.CharField(choices=[('renewal', 'Renewal'), ('maintenance', 'Maintenance'), ('over due', 'Over Due'), ('server break down', 'Server Break Down'), ('custom', 'Custom')], default='renewal', max_length=50),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=100)),
                ('contact_phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer_type', models.CharField(choices=[('inhouse', 'In-house'), ('external', 'External')], max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customer',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomerResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_cost', models.DecimalField(decimal_places=2, help_text='Total cost of the resource usage.', max_digits=10)),
                ('usage_start_date', models.DateTimeField(help_text='Start date of resource usage.')),
                ('usage_end_date', models.DateTimeField(help_text='End date of resource usage.')),
                ('payment_status', models.CharField(choices=[('paid', 'Paid'), ('unpaid', 'Unpaid'), ('pending', 'Pending')], default='pending', max_length=20)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer', to='SubSync.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_name', models.CharField(max_length=100)),
                ('resource_type', models.CharField(choices=[('database', 'Database'), ('compute', 'Compute'), ('storage', 'Storage'), ('network', 'Network')], max_length=50)),
                ('status', models.CharField(choices=[('available', 'Available'), ('in_use', 'In Use'), ('maintenance', 'Maintenance')], max_length=20)),
                ('capacity', models.CharField(help_text='Specify resource capacity (e.g., 4 vCPUs, 100 GB, 1 TB bandwidth).', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customers', models.ManyToManyField(related_name='customer_resources', through='SubSync.CustomerResource', to='SubSync.customer')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='server_resources', to='SubSync.servers')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_resources', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'resource',
            },
        ),
        migrations.AddField(
            model_name='customerresource',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='SubSync.resource'),
        ),
    ]
