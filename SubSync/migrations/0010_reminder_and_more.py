# Generated by Django 5.1.4 on 2025-03-05 05:44

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('SubSync', '0009_alter_subscription_billing_cycle_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_cycle', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('semi-annual', 'Semi-Annual'), ('annual', 'Annual'), ('biennial', 'Biennial'), ('triennial', 'Triennial')], default='monthly', help_text='Defines the frequency of the subscription.', max_length=20)),
                ('reminder_days_before', models.IntegerField(blank=True, help_text='For weekly/monthly cycles: How many days before to receive a reminder?', null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('reminder_months_before', models.IntegerField(blank=True, help_text='For long-term cycles: How many months before to receive a reminder?', null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('reminder_day_of_month', models.IntegerField(blank=True, help_text='For long-term cycles: Specific day of the month for reminder.', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('optional_days_before', models.IntegerField(blank=True, help_text='Optional: Extra days before the reminder.', null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('reminder_status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('notification_method', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('in-app', 'In-App'), ('all', 'all')], default='email', help_text='Method of notification (email, SMS, etc.)', max_length=20)),
                ('recipients', models.TextField(blank=True, help_text='Comma-separated email addresses.', null=True)),
                ('custom_message', models.TextField(blank=True, help_text='Custom message for the reminder.', null=True)),
                ('reminder_date', models.DateField(blank=True, help_text='Date when the reminder will be sent.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reminder_type', models.CharField(choices=[('renewal', 'Renewal'), ('maintenance', 'Maintenance'), ('custom', 'Custom')], default='renewal', max_length=50)),
                ('reminder_time', models.TimeField(default='09:00:00', help_text='Time to send the reminder.')),
            ],
        ),
        migrations.RenameField(
            model_name='softwaresubscriptions',
            old_name='license_type',
            new_name='license_key',
        ),
        migrations.RenameField(
            model_name='subscription',
            old_name='subscription_key',
            new_name='subscription_id',
        ),
        migrations.RemoveField(
            model_name='domain',
            name='domain_transfer_status',
        ),
        migrations.RemoveField(
            model_name='softwaresubscriptions',
            name='features',
        ),
        migrations.RemoveField(
            model_name='subscription',
            name='discount_coupon',
        ),
        migrations.RemoveField(
            model_name='utilities',
            name='account_number',
        ),
        migrations.RemoveField(
            model_name='utilities',
            name='location',
        ),
        migrations.AddField(
            model_name='domain',
            name='hosting_provider',
            field=models.CharField(default='dff', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='domain',
            name='name_servers',
            field=models.CharField(default='dgd', max_length=255),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='domain',
            name='domain_type',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='subscription',
            name='payment_method',
            field=models.CharField(max_length=50),
        ),
        migrations.CreateModel(
            name='ReminderHardware',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hardware', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SubSync.hardware')),
                ('reminder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hardware_reminder', to='SubSync.reminder')),
            ],
        ),
        migrations.CreateModel(
            name='ReminderSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_reminder', to='SubSync.reminder')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SubSync.subscription')),
            ],
        ),
    ]
